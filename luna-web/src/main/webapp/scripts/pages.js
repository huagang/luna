/**
 * 微景展事件初始化界面
 * 数据加载顺序
 * 1:进入界面先加载列表信息，渲染列表，同时初始各种点击事件
 * 2:默认点击第一个界面,得到第一个界面里面的元素；遍历每个元素，遍历中赋值到 currentComponent,将currentComponent复制到全局变量lunapage中，激活angular的初始设置，渲染画布中对应的组件，然后画布中的数据到currentComponent中，也就是全局变量的lunapage中，然后再更新controller中的数据
 * 3:切换page的时候，先保存当前页面的数据，然后再触发点击事件重复2中的过程
 */

var imghost = "http://cdn.visualbusiness.cn/public/vb";

var lunaPage = {},
    currentPageId = "",
    currentComponentId = "",
    currentComponent = {},
    currentPage = null;

var objdata = {
    businessId: Util.location().business_id || 0,
    articleListData: null,
    articleData: null,
    canvas: {
        width: 375, //画布的宽
        height: 617 //画布的高
    }
};

var $overlay = $("#pop-overlay"); //模态层，有效缓存变量

/** 
 * 初始化头部点击事件
 */
var InitTopArea = function () {

    //初始化插件生成事件
    var initComponentClickEvent = function () {
        document.querySelector(".component-btn-wrap").addEventListener('click', function (e) {
            e.preventDefault();

            //div添加事件
            var divBtnDom = $(e.target.closest('.component-btn'))[0];

            var tagId = divBtnDom.id,
                componentType = divBtnDom.dataset.comtype;

            if (componentType.length > 0) {
                createNewEelement(componentType, 'create');
            }
        });
    };

    return {
        init: function () {
            initComponentClickEvent();
        }
    };
} ();
/** 
 * 初始化左边的代码
 */
var InitLeftArea = function () {

    //左侧列表拖拽效果
    var initDragEvent = function () {
        //拖拽变换页面的顺序
        $('#list-page').droppable({
            activeClass: 'active',
            hoverClass: 'hover',
            accept: ":not(.ui-sortable-helper)", // Reject clones generated by sortable
            drop: function (e, ui) {
                var $el = $('<li class="drop-item">' + ui.draggable.html() + '</li>');
                $(this).append($el);
            },
        }).sortable({
            items: '.drop-item:not(.welcome)',
            sort: function () {
                $(this).removeClass("active");
                console.log('sort');
            },
            delay: 500,
            stop: function () {
                reOrderPage();
            }
        });
    };

    //初始化页面创建、修改点击事件
    var initEditEvent = function () {
        //新增界面
        $("#new-built").click(function () {
            $overlay.css("display", "block");
            var $pop_window = $("#pop-add");
            var h = $pop_window.height();
            var w = $pop_window.width();
            var $height = $(window).height();
            var $width = $(window).width();
            $pop_window.css({
                "display": "block",
                "top": ($height - h) / 2,
                "left": ($width - w) / 2
            });
            resetDialog();
            $("[name=pageType][value=1]").trigger('click');
            $('#txt-name,#txt-short').removeAttr('readonly', 'readonly');
        });

        //修改界面
        $("#list-page").on('click', 'a.modify', function (e) {
            e.preventDefault();
            e.stopPropagation();
            var pageItemDom = $(e.target).closest('li'),
                pageCode = pageItemDom.data('pagecode');
            if (pageCode == 'welcome' || pageCode == 'index') {
                if (pageCode == 'welcome') {
                    $('#txt-time').closest('.item-wrap').removeClass('hide');
                } else {
                    $('#txt-time').closest('.item-wrap').addClass('hide');
                }
                $('#txt-name,#txt-short').attr('readonly', 'readonly');
            } else {
                $('#txt-name,#txt-short').removeAttr('readonly', 'readonly');
            }
            modify(e);
        });
        //页面复用
        $("#list-page").on('click', 'a.pageCopy', function (e) {
            e.preventDefault();
            e.stopPropagation();
            modify(e, 'copy');
        });

        //创建或更新，根据弹窗是否存在modify_page_id确定
        $("#setup").click(function (e) {
            var modifyPageId = $("#modify_page_id").val();
            var sourcePageId = $('#sourcePageId').val();
            if (modifyPageId) {
                modifyPageName();
            } else if (sourcePageId) {
                lunaPage.savePage(currentPageId);
                creatPageID();
            } else {
                creatPageID();
            }
        });

        $('[name=pageType]').on('change', function (e) {
            if ($(this).val() == 1) {
                $('#txtPageHeight').attr('readonly', 'readonly');
                document.querySelector('#txtPageHeight').value = '';
            } else if ($('#sourcePageId')) {
                $('#txtPageHeight').attr('readonly', 'readonly');
            } else {
                $('#txtPageHeight').removeAttr('readonly');
            }
        });

        //取消
        $("button.btn-clc").click(function (e) {
            $overlay.css("display", "none");
            $("div.pop").css("display", "none");
        });

        $("#btn-delete").click(function (e) {
            e.preventDefault();
            e.stopPropagation();
            deletePage($(this).attr("pageID"));
        });
    };
    /** 
     * 初始化选中功能
     */
    var initPageSelectEvent = function () {
        // 左侧点击页面
        $("#list-page").on("click", ".drop-item", function () {

            $(this).siblings(".drop-item").removeClass("current");
            $(this).addClass("current");

            lunaPage.getPageData($(this).attr("page_id"));


        });
    };

    return {
        init: function () {
            initDragEvent();
            initEditEvent();
            initPageSelectEvent();
        }
    };
} ();

/** 
 * 初始化右边的代码
 */
var InitRightArea = function () {

    /** 
     * 初始化颜色选择
     */
    var initColorSet = function () {
        $('.color-set').each(function () {
            $(this).minicolors({
                control: $(this).attr('data-control') || 'hue',
                defaultValue: $(this).attr('data-defaultValue') || '',
                inline: $(this).attr('data-inline') === 'true',
                format: $(this).attr('data-format') || 'hex',
                letterCase: $(this).attr('data-letterCase') || 'lowercase',
                opacity: $(this).attr('data-opacity'),
                position: $(this).attr('data-position') || 'bottom left',
                change: function (value, opacity) {
                    if (!value) return;
                    if (opacity) value += ', ' + opacity;
                    if (typeof console === 'object') {
                        console.log(value);
                    }
                },
                theme: 'bootstrap'
            });

        });
    };

    /**
    *初始化收起功能 
    */
    var initSlide = function () {

        $('.btn-slide').on('click', function (e) {
            $(this).closest('.slide-panel').find('.slide-content').toggle();
            $(this).toggleClass('icon-slideup');
            $(this).toggleClass('icon-slidedown');
        });
    };
    /** 
     * 初始化字体的功能
     */
    var initFontSet = function () {
        //字体
        $('#font-select').on('click', 'li', function () {
            var fontFamily = $(this).text();
            $("div.selected-text").css("font-family", fontFamily);
            lunaPage.updatePageComponents();
        });
        //字体大小
        $('#size-select').on('click', 'li', function () {
            var fontSize = $(this).text();
            $("div.selected-text").css("font-size", fontSize);
            lunaPage.updatePageComponents();
        });
        //粗细
        $('#bold-select').click(function () {
            var $tarSelect = $("div.selected-text");
            var fontWeight = $tarSelect.css("font-weight");
            if (fontWeight == "bold") {
                $tarSelect.css("font-weight", "normal");
            } else {
                $tarSelect.css("font-weight", "bold");
            }
            lunaPage.updatePageComponents();
        });
        //斜体
        $('#italic-select').click(function () {
            var $tarSelect = $("div.selected-text");
            var fontStyle = $tarSelect.css("font-style");
            if (fontStyle == "italic") {
                $tarSelect.css("font-style", "normal");
            } else {
                $tarSelect.css("font-style", "italic");
            }
            lunaPage.updatePageComponents();
        });
        //颜色
        $('#color-select').change(function () {
            // $("div.selected-text").css("color","'" + colorSet + "'");
            $("div.selected-text").css("color", this.value);

            lunaPage.updatePageComponents();
        });
        //左对齐
        $("#left-select").click(function () {
            $("div.selected-text").css("text-align", "left");
            lunaPage.updatePageComponents();
        });
        //居中
        $("#center-select").click(function () {
            $("div.selected-text").css("text-align", "center");
            lunaPage.updatePageComponents();
        });
        //右对齐
        $("#right-select").click(function () {
            $("div.selected-text").css("text-align", "right");
            lunaPage.updatePageComponents();
        });
        //行高
        $('#lineheight-select').on('click', 'li', function () {
            var lineHeight = $(this).text();
            $(".selected-text").css("line-height", lineHeight);
            lunaPage.updatePageComponents();
        });
    };

    var initPositionSet = function () {
        //按up键上移1px
        $(document).bind('keydown', 'up', function (e) {
            var $target = $("div.componentbox-selected");
            var target_exist = $target.length;
            var y = $('#elementy').val();
            var status = $editor.is(':focus');
            if ((!status) && target_exist) {
                if ($target.css('top') == '0px') {
                    console.log('已经到顶部');
                    return false;
                }
                var position = $target.position();
                position.top = position.top - 1;
                $target.css("top", position.top + 'px');
                y = parseInt(y) - 1;
                $('#elementy').val(y);

                lunaPage.updatePageComponents();
                componentPanel.update();
                return false;
            }
        });
        //按down键下移1px
        $(document).bind('keydown', 'down', function (e) {
            var $target = $("div.componentbox-selected");
            var y = $('#elementy').val();
            var target_exist = $target.length;
            var status = $editor.is(':focus');
            if ((!status) && target_exist) {
                if ($target.css('bottom') == '0px') {
                    console.log('已经到底部');
                    return false;
                }
                var position = $target.position();
                position.top = position.top + 1;
                $target.css("top", position.top + 'px');
                y = parseInt(y) + 1;
                $('#elementy').val(y);

                lunaPage.updatePageComponents();
                componentPanel.update();
                return false;
            }
        });
        //按left键左移1px
        $(document).bind('keydown', 'left', function (e) {
            if (e.target.nodeName == 'INPUT') {
                //如果是文本框，不操作空间位置，直接返回true
                return true;
            }
            var $target = $("div.componentbox-selected");
            var x = $('#elementx').val();
            var target_exist = $target.length;
            var status = $editor.is(':focus');
            if ((!status) && target_exist) {
                if ($target.css('left') == '0px') {
                    console.log('已经到左侧');
                    return false;
                }
                var position = $target.position();
                position.left = position.left - 1;
                $target.css("left", position.left + 'px');
                $('#elementx').val(parseInt(x) - 1);
                lunaPage.updatePageComponents();
                componentPanel.update();
                return false;
            }
        });
        //按right键右移1px
        $(document).bind('keydown', 'right', function (e) {
            if (e.target.nodeName == 'INPUT') {
                //如果是文本框，不操作空间位置，直接返回true
                return true;
            }

            var $target = $("div.componentbox-selected");
            var x = $('#elementx').val();
            var target_exist = $target.length;
            var status = $editor.is(':focus');
            if ((!status) && target_exist) {
                if ($target.css('right') == '0px') {
                    console.log('已经到右侧');
                    return false;
                }
                var position = $target.position();
                position.left = position.left + 1;
                $target.css("left", position.left + 'px');
                $('#elementx').val(parseInt(x) + 1);
                lunaPage.updatePageComponents();
                componentPanel.update();
                return false;
            }
        });
        //按shift+up键上移10px
        $(document).bind('keydown', 'shift+up', function (e) {
            var $target = $("div.componentbox-selected");
            var y = $('#elementy').val();
            var target_exist = $target.length;
            var status = $editor.is(':focus');
            if ((!status) && target_exist) {
                if ($target.css('top') == '0px') {
                    console.log('已经到顶部');
                    return false;
                }
                var position = $target.position();
                position.top = position.top - 10;
                $target.css("top", position.top + 'px');
                $('#elementy').val(parseInt(y) - 10);
                lunaPage.updatePageComponents();
                componentPanel.update();
                return false;
            }
        });
        //按shift+down键下移10px
        $(document).bind('keydown', 'shift+down', function (e) {
            var $target = $("div.componentbox-selected");
            var y = $('#elementy').val();
            var target_exist = $target.length;
            var status = $editor.is(':focus');
            if ((!status) && target_exist) {
                if ($target.css('bottom') == '0px') {
                    console.log('已经到底部');
                    return false;
                }
                var position = $target.position();
                position.top = position.top + 10;
                $target.css("top", position.top + 'px');
                $('#elementy').val(parseInt(y) + 10);
                lunaPage.updatePageComponents();
                componentPanel.update();
                return false;
            }
        });
        //按shift+left键左移10px
        $(document).bind('keydown', 'shift+left', function (e) {
            var $target = $("div.componentbox-selected");
            var x = $('#elementx').val();
            var target_exist = $target.length;
            var status = $editor.is(':focus');
            if ((!status) && target_exist) {
                if ($target.css('left') == '0px') {
                    console.log('已经到左侧');
                    return false;
                }
                var position = $target.position();
                position.left = position.left - 10;
                $target.css("left", position.left + 'px');
                $('#elementx').val(parseInt(x) - 10);
                lunaPage.updatePageComponents();
                componentPanel.update();
                return false;
            }
        });
        //按shift+right键右移10px
        $(document).bind('keydown', 'shift+right', function (e) {
            var $target = $("div.componentbox-selected");
            var x = $('#elementx').val();
            var target_exist = $target.length;
            var status = $editor.is(':focus');
            if ((!status) && target_exist) {
                if ($target.css('right') == '0px') {
                    console.log('已经到右侧');
                    return false;
                }
                var position = $target.position();
                position.left = position.left + 10;
                $target.css("left", position.left + 'px');
                $('#elementx').val(parseInt(x) + 10);
                lunaPage.updatePageComponents();
                componentPanel.update();
                return false;
            }
        });
    };

    /** 
     * 初始化富文本编辑器
     */
    var initEditor = function () {
        var $editor = $("#editor");

        var fonts = ['宋体', '黑体', '微软雅黑', 'Arial', 'Times New Roman', 'Verdana'],
            $fontTarget = $('#font-select');
        var font_size = ['12px', '13px', '14px', '16px', '18px', '20px', '24px', '28px', '32px', '36px', '40px', '48px', '64px', '72px'],
            $sizeTarget = $('#size-select');
        var line_height = ['12px', '13px', '14px', '16px', '18px', '20px', '24px', '28px', '32px', '36px', '40px', '48px', '64px', '72px'],
            $heightTarget = $('#lineheight-select');
        $.each(fonts, function (idx, fontName) {
            $fontTarget.append($('<li><a data-edit="fontName ' + fontName + '" style="font-family:\'' + fontName + '\'">' + fontName + '</a></li>'));
        });
        $.each(font_size, function (idx, fontSize) {
            $sizeTarget.append($('<li><a data-edit="fontSize ' + fontSize + '" style="font-size:\'' + fontSize + '\'">' + fontSize + '</a></li>'));
        });
        $.each(line_height, function (idx, lineHeight) {
            $heightTarget.append($('<li><a data-edit="lineHeight' + lineHeight + '" style="line-height:\'' + lineHeight + '\'">' + lineHeight + '</a></li>'));
        });

        //富文本编辑器输入
        $editor.on('keyup keydown', function (e) {
            var content = $editor.html();
            var len_input = $editor.text().length;
            if (len_input > 512) {
                if (e.keyCode != 8) {
                    return false;
                }
            }
        });

        //粘贴时去除样式
        $editor.on('paste', function () {
            setTimeout(function () {
                var content = $editor.html();
                var newContent = content.replace(/<[^>]+>/g, "");
                $editor.html(newContent);
                var len_input = $editor.text().length;
                if (len_input > 512) {
                    $editor.text($editor.text().substring(0, 512));
                    newContent = $editor.html();
                }
                $("div.selected-text").html(newContent);
                componentPanel.update();

            }, 1);
        });
        //编辑器点击事件
        $editor.on('click', function () {
            var $component = $("div.componentbox");
        });
    };

    return {
        init: function () {
            initColorSet();
            initSlide();
            initFontSet();
            initPositionSet();
            initEditor();
        }
    };
} ();

/** 
 * 初始化中间画布的代码
 */
var InitCenterArea = function () {

    //画布中的右键点击事件
    var initRightClickEvent = function () {
        //右键删除组件
        $("#layermain").contextmenu({
            target: '#context-menu',
            before: function (e, element, target) {
                e.preventDefault();
                // if (e.target.tagName == 'SPAN') {
                //     e.preventDefault();
                //     this.closemenu();
                //     return false;
                // }
                return true;
            },
            onItem: function (context, e) {
                var domId = e.target.id;

                console.log(context);
                switch (domId) {
                    case 'copy':
                        if ($('#' + currentComponentId).length > 0) {
                            var copmpnentType = currentComponent.type;
                            createNewEelement(copmpnentType, 'copy');
                        }
                        break;
                    case 'delete':
                        if ($('#' + currentComponentId).length > 0) {
                            $('#' + currentComponentId).remove();
                            lunaPage.delPageComponents(currentPageId, currentComponentId);
                        }
                        break;
                    default:
                        break;
                }

                $("#context-menu").css("display", "none");
            }
        });
    };

    // 初始化左键点击事件 
    var initLeftClickEvent = function () {
        $('#canvas').on('click', '*[component-type]', function (e) {
            var target = $(this);
            $("div.selected-text").removeClass("selected-text");
            $("div.componentbox-selected").removeClass("componentbox-selected");
            target.addClass("componentbox-selected");
            $(this).find(".con .text").addClass("selected-text");
            getEleFocus(target);
            currentComponentId = target.attr("component-id");
            currentComponent = lunaPage.pages[currentPageId].page_content[target.attr("component-id")];
            componentPanel.init();
            if (target.attr("component-type") == "text") {
                $("#editor").html(lunaPage.pages[currentPageId].page_content[currentComponentId].content);
            }
            e.stopPropagation();
        });
    };

    //绑定键盘事件
    var initKeyBoardEvent = function () {

        //按delete按钮删除组件
        $(document).bind('keydown', 'del', function (e) {
            if (e.target.nodeName == "INPUT") {
                //如果是文本框，删除文本框中的内容，不删除画布中的插件
                return true;
            }
            var status = $('#editor').is(':focus');
            if (!status) {
                $("div.componentbox-selected").remove();
                lunaPage.delPageComponents(currentPageId, currentComponentId);
            }
        });
    };

    return {
        init: function () {
            initLeftClickEvent();
            initRightClickEvent();
            initKeyBoardEvent();
        }
    };
} ();


$(document).ready(function () {

    //清空文件上传的值，解决同一文件不能重复上传问题
    $('input[type=file]').on('click', function (e) {
        $(this).val('');
    });
    InitTopArea.init();
    InitRightArea.init();
    InitLeftArea.init();
    InitCenterArea.init();
    // do init at last
    lunaPage.init();
});

/**
 * 界面的初始化状态
 */
(function ($) {
    $.init = function () {
        getAppData(getAppId(), function (res) {
            if (res.code != "0") {
                //不等于零说明获取数据失败
                $.alert(res.msg);
                return;
            }
            lunaPage.pages = res.data;
        });
        this.showPageList(this.pages);

        var firstPage = jQuery(".list-page .drop-item:first");
        if (firstPage) {
            firstPage.trigger('click');
        }
    };

    $.showPageList = function (pageList) {
        //debugger;
        setPageListHtml(pageList);
    };

    $.savePageList = function (pageList) {
        //调用借口保存数据
        savePageData();
    };

    //获取数据并展示
    $.getPageData = function (pageID) {
        //debugger;
        if (!$.pages[pageID].page_content) {
            getPageDataDetail(pageID, function (res) {
                if (res.code != "0") {
                    //不等于零说明获取数据失败
                    alert(res.msg);
                    return;
                }
                var data = res.data;
                lunaPage.pages[data.page_id] = res.data;
            });
        }
        this.showPage(pageID);
    };

    $.creatPage = function (pageID) {
        creatPageHtml(pageID);
    };

    $.showPage = function (pageID) {
        if (currentPageId !== "" && currentPageId != pageID) {
            this.savePage(currentPageId);
        }
        currentPageId = pageID;
        setPageHtml(pageID);
        setTimeout(function () {
            jQuery('#canvas [component-type=canvas]').trigger('click');
        }, 5);
    };

    $.savePage = function (pageID, isPrompt) {
        //调用接口保存单个页面数据
        savePageData(pageID, isPrompt);
    };

    $.delPage = function (pageID) {
        delete lunaPage.pages[pageID];
        currentPageId = "";
        currentPage = {};
        reOrderPage();
    };

    //更新component model
    $.updatePageComponents = function () {
        updatePageComponents();
    };

    $.creatPageComponents = function (pageID, componentType, createType) {
        creatPageComponentsHtml(pageID, currentComponent, createType);
    };

    $.delPageComponents = function (pageID, componentID) {
        if (pageID && componentID) {
            delete lunaPage.pages[pageID].page_content[componentID];
            currentComponentId = "";
            currentComponent = {};
            jQuery('#canvas [component-type=canvas]').trigger('click');
        }
    };
})(lunaPage);
