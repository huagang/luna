package com.visualbusiness.mybatis.gen.comment;

import java.util.Date;
import java.util.Properties;

import org.mybatis.generator.api.CommentGenerator;
import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.dom.java.CompilationUnit;
import org.mybatis.generator.api.dom.java.Field;
import org.mybatis.generator.api.dom.java.InnerClass;
import org.mybatis.generator.api.dom.java.InnerEnum;
import org.mybatis.generator.api.dom.java.JavaElement;
import org.mybatis.generator.api.dom.java.Method;
import org.mybatis.generator.api.dom.java.Parameter;
import org.mybatis.generator.api.dom.java.TopLevelClass;
import org.mybatis.generator.api.dom.xml.TextElement;
import org.mybatis.generator.api.dom.xml.XmlElement;
import org.mybatis.generator.internal.util.StringUtility;

/**
 * 生成JavadocComment
 * @author Mark
 *
 */
public class MsCommentGenerator implements CommentGenerator {
	private Properties properties;
	private boolean suppressDate;
	private boolean suppressAllComments;
	private boolean addRemarkComments;

	public MsCommentGenerator() {
		properties = new Properties();
		suppressDate = false;
		suppressAllComments = false;
		addRemarkComments = false;
	}
	public void addJavaFileComment(CompilationUnit compilationUnit) {
	}
	public void addComment(XmlElement xmlElement) {
		if (suppressAllComments) {
			return;
		}

		xmlElement.addElement(new TextElement("<!--"));
		StringBuilder sb = new StringBuilder();
		sb.append("  WARNING - ");
		sb.append("@generated by mark");
		xmlElement.addElement(new TextElement(sb.toString()));
		xmlElement.addElement(new TextElement("  This element is automatically generated by MyBatis Generator, do not modify."));
		String s = getDateString();
		if (s != null) {
			sb.setLength(0);
			sb.append("  This element was generated on ");
			sb.append(s);
			sb.append('.');
			xmlElement.addElement(new TextElement(sb.toString()));
		}
		xmlElement.addElement(new TextElement("-->"));
	}

	public void addRootComment(XmlElement rootElement) {
	}

	public void addConfigurationProperties(Properties properties) {
		this.properties.putAll(properties);
		suppressDate = StringUtility.isTrue(properties.getProperty("suppressDate"));
		suppressAllComments = StringUtility.isTrue(properties.getProperty("suppressAllComments"));
		addRemarkComments = StringUtility.isTrue(properties.getProperty("addRemarkComments"));
	}

	protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {
		javaElement.addJavaDocLine(" *");
		StringBuilder sb = new StringBuilder();
		sb.append(" * ");
		sb.append("@mbggenerated");
		if (markAsDoNotDelete) {
			sb.append(" do_not_delete_during_merge");
		}
		String s = getDateString();
		if (s != null) {
			sb.append(' ');
			sb.append(s);
		}
		javaElement.addJavaDocLine(sb.toString());
	}
	protected String getDateString() {
		if (suppressDate) {
			return null;
		}
		return new Date().toString();
	}
	public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {
		if (suppressAllComments) {
			return;
		}

		StringBuilder sb = new StringBuilder();
		innerClass.addJavaDocLine("/**");
		innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");
		sb.append(" * This class corresponds to the database table ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		innerClass.addJavaDocLine(sb.toString());
		addJavadocTag(innerClass, false);
		innerClass.addJavaDocLine(" */");
	}

	public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
		if ((suppressAllComments) || (!addRemarkComments)) {
			return;
		}

		StringBuilder sb = new StringBuilder();
		topLevelClass.addJavaDocLine("/**");
		String remarks = introspectedTable.getRemarks();
		if ((addRemarkComments) && (StringUtility.stringHasValue(remarks))) {
			topLevelClass.addJavaDocLine(" * Database Table Remarks:");
			String[] remarkLines = remarks.split(System.getProperty("line.separator"));
			for (String remarkLine : remarkLines) {
				topLevelClass.addJavaDocLine(" *   " + remarkLine);
			}
		}
		topLevelClass.addJavaDocLine(" *");
		topLevelClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");
		sb.append(" * This class corresponds to the database table ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		topLevelClass.addJavaDocLine(sb.toString());
		addJavadocTag(topLevelClass, true);
		topLevelClass.addJavaDocLine(" */");
	}

	public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {
		if (suppressAllComments) {
			return;
		}

		StringBuilder sb = new StringBuilder();
		innerEnum.addJavaDocLine("/**");
		innerEnum.addJavaDocLine(" * This enum was generated by MyBatis Generator.");
		sb.append(" * This enum corresponds to the database table ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		innerEnum.addJavaDocLine(sb.toString());
		addJavadocTag(innerEnum, false);
		innerEnum.addJavaDocLine(" */");
	}

	public void addFieldComment(Field field,
			IntrospectedTable introspectedTable,
			IntrospectedColumn introspectedColumn) {
		if (suppressAllComments) {
			return;
		}

		field.addJavaDocLine("/**");
		String remarks = introspectedColumn.getRemarks();
		if ((addRemarkComments) && (StringUtility.stringHasValue(remarks))) {
			field.addJavaDocLine(" * Database Column Remarks:");
			String[] remarkLines = remarks.split(System.getProperty("line.separator"));
			for (String remarkLine : remarkLines) {
				field.addJavaDocLine(" *   " + remarkLine);
			}
		}

		field.addJavaDocLine(" *");
		field.addJavaDocLine(" * This field was generated by MyBatis Generator.");
		StringBuilder sb = new StringBuilder();
		sb.append(" * This field corresponds to the database column ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		sb.append('.');
		sb.append(introspectedColumn.getActualColumnName());
		field.addJavaDocLine(sb.toString());
		addJavadocTag(field, false);
		field.addJavaDocLine(" */");
	}

	public void addFieldComment(Field field, IntrospectedTable introspectedTable) {
		if (suppressAllComments) {
			return;
		}

		StringBuilder sb = new StringBuilder();
		field.addJavaDocLine("/**");
		field.addJavaDocLine(" * This field was generated by Mark.");
		sb.append(" * ");
		sb.append(introspectedTable.getRemarks()).append(" ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		field.addJavaDocLine(sb.toString());
		addJavadocTag(field, false);
		field.addJavaDocLine(" */");
	}
	public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {
		if (suppressAllComments) {
			return;
		}
		StringBuilder sb = new StringBuilder();

		method.addJavaDocLine("/**");
		method.addJavaDocLine(" * This method was generated by MyBatis Generator.");
		sb.append(" * This method corresponds to the database table ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		method.addJavaDocLine(sb.toString());
		addJavadocTag(method, false);
		method.addJavaDocLine(" */");
	}
	public void addGetterComment(Method method,
			IntrospectedTable introspectedTable,
			IntrospectedColumn introspectedColumn) {
		if (suppressAllComments) {
			return;
		}

		StringBuilder sb = new StringBuilder();
		method.addJavaDocLine("/**");
		method.addJavaDocLine(" * This method was generated by MyBatis Generator.");
		sb.append(" * This method returns the value of the database column ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		sb.append('.');
		sb.append(introspectedColumn.getActualColumnName());
		method.addJavaDocLine(sb.toString());
		method.addJavaDocLine(" *");
		sb.setLength(0);
		sb.append(" * @return the value of ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		sb.append('.');
		sb.append(introspectedColumn.getActualColumnName());
		method.addJavaDocLine(sb.toString());
		addJavadocTag(method, false);
		method.addJavaDocLine(" */");
	}

	public void addSetterComment(Method method,
			IntrospectedTable introspectedTable,
			IntrospectedColumn introspectedColumn) {
		if (suppressAllComments) {
			return;
		}

		StringBuilder sb = new StringBuilder();
		method.addJavaDocLine("/**");
		method.addJavaDocLine(" * This method was generated by MyBatis Generator.");
		sb.append(" * This method sets the value of the database column ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		sb.append('.');
		sb.append(introspectedColumn.getActualColumnName());
		method.addJavaDocLine(sb.toString());
		method.addJavaDocLine(" *");
		Parameter parm = (Parameter)method.getParameters().get(0);
		sb.setLength(0);
		sb.append(" * @param ");
		sb.append(parm.getName());
		sb.append(" the value for ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		sb.append('.');
		sb.append(introspectedColumn.getActualColumnName());
		method.addJavaDocLine(sb.toString());
		addJavadocTag(method, false);
		method.addJavaDocLine(" */");
	}

	public void addClassComment(InnerClass innerClass,
			IntrospectedTable introspectedTable,
			boolean markAsDoNotDelete) {
		if (suppressAllComments) {
			return;
		}

		StringBuilder sb = new StringBuilder();
		innerClass.addJavaDocLine("/**");
		innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");
		sb.append(" * This class corresponds to the database table ");
		sb.append(introspectedTable.getFullyQualifiedTable());
		innerClass.addJavaDocLine(sb.toString());
		addJavadocTag(innerClass, markAsDoNotDelete);
		innerClass.addJavaDocLine(" */");
	}
}
