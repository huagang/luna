<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="luna_reg_email">
  <resultMap class="ms.luna.biz.dao.model.LunaRegEmail" id="BaseResultMap">
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="regist_hhmmss" jdbcType="TIMESTAMP" property="registHhmmss" />
    <result column="up_hhmmss" jdbcType="TIMESTAMP" property="upHhmmss" />
    <result column="invite_unique_id" jdbcType="VARCHAR" property="inviteUniqueId" />
    <result column="merchant_id" jdbcType="VARCHAR" property="merchantId" />
  </resultMap>
  <resultMap class="ms.luna.biz.dao.model.LunaRegEmail" extends="luna_reg_email.BaseResultMap" id="ResultMapWithBLOBs">
    <result column="extra" jdbcType="LONGVARCHAR" property="extra" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$ #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <sql id="Base_Column_List">
    token, role_id, email, status, regist_hhmmss, up_hhmmss, invite_unique_id, merchant_id
  </sql>
  <sql id="Blob_Column_List">
    extra
  </sql>
  <select id="selectByExampleWithBLOBs" parameterClass="ms.luna.biz.dao.model.LunaRegEmailCriteria" resultMap="ResultMapWithBLOBs">
    select
    <isParameterPresent>
      <isEqual compareValue="true" property="distinct">
        distinct
      </isEqual>
    </isParameterPresent>
    <include refid="luna_reg_email.Base_Column_List" />
    ,
    <include refid="luna_reg_email.Blob_Column_List" />
    from luna_reg_email
    <isParameterPresent>
      <include refid="luna_reg_email.Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="selectByExample" parameterClass="ms.luna.biz.dao.model.LunaRegEmailCriteria" resultMap="BaseResultMap">
    select
    <isParameterPresent>
      <isEqual compareValue="true" property="distinct">
        distinct
      </isEqual>
    </isParameterPresent>
    <include refid="luna_reg_email.Base_Column_List" />
    from luna_reg_email
    <isParameterPresent>
      <include refid="luna_reg_email.Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="selectByPrimaryKey" parameterClass="ms.luna.biz.dao.model.LunaRegEmail" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="luna_reg_email.Base_Column_List" />
    ,
    <include refid="luna_reg_email.Blob_Column_List" />
    from luna_reg_email
    where token = #token:VARCHAR#
  </select>
  <delete id="deleteByPrimaryKey" parameterClass="ms.luna.biz.dao.model.LunaRegEmail">
    delete from luna_reg_email
    where token = #token:VARCHAR#
  </delete>
  <delete id="deleteByExample" parameterClass="ms.luna.biz.dao.model.LunaRegEmailCriteria">
    delete from luna_reg_email
    <include refid="luna_reg_email.Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterClass="ms.luna.biz.dao.model.LunaRegEmail">
    insert into luna_reg_email (token, role_id, email, status, regist_hhmmss, 
      up_hhmmss, invite_unique_id, merchant_id, extra
      )
    values (#token:VARCHAR#, #roleId:INTEGER#, #email:VARCHAR#, #status:BIT#, #registHhmmss:TIMESTAMP#, 
      #upHhmmss:TIMESTAMP#, #inviteUniqueId:VARCHAR#, #merchantId:VARCHAR#, #extra:LONGVARCHAR#
      )
  </insert>
  <insert id="insertSelective" parameterClass="ms.luna.biz.dao.model.LunaRegEmail">
    insert into luna_reg_email
    <dynamic prepend="(">
      <isNotNull prepend="," property="token">
        token
      </isNotNull>
      <isNotNull prepend="," property="roleId">
        role_id
      </isNotNull>
      <isNotNull prepend="," property="email">
        email
      </isNotNull>
      <isNotNull prepend="," property="status">
        status
      </isNotNull>
      <isNotNull prepend="," property="registHhmmss">
        regist_hhmmss
      </isNotNull>
      <isNotNull prepend="," property="upHhmmss">
        up_hhmmss
      </isNotNull>
      <isNotNull prepend="," property="inviteUniqueId">
        invite_unique_id
      </isNotNull>
      <isNotNull prepend="," property="merchantId">
        merchant_id
      </isNotNull>
      <isNotNull prepend="," property="extra">
        extra
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="token">
        #token:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="roleId">
        #roleId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="email">
        #email:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="status">
        #status:BIT#
      </isNotNull>
      <isNotNull prepend="," property="registHhmmss">
        #registHhmmss:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="upHhmmss">
        #upHhmmss:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="inviteUniqueId">
        #inviteUniqueId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="merchantId">
        #merchantId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="extra">
        #extra:LONGVARCHAR#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="countByExample" parameterClass="ms.luna.biz.dao.model.LunaRegEmailCriteria" resultClass="java.lang.Integer">
    select count(*) from luna_reg_email
    <include refid="luna_reg_email.Example_Where_Clause" />
  </select>
  <update id="updateByExampleSelective">
    update luna_reg_email
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.token">
        token = #record.token:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.roleId">
        role_id = #record.roleId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.email">
        email = #record.email:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.status">
        status = #record.status:BIT#
      </isNotNull>
      <isNotNull prepend="," property="record.registHhmmss">
        regist_hhmmss = #record.registHhmmss:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.upHhmmss">
        up_hhmmss = #record.upHhmmss:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.inviteUniqueId">
        invite_unique_id = #record.inviteUniqueId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.merchantId">
        merchant_id = #record.merchantId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.extra">
        extra = #record.extra:LONGVARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="luna_reg_email.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByExampleWithBLOBs">
    update luna_reg_email
    set token = #record.token:VARCHAR#,
      role_id = #record.roleId:INTEGER#,
      email = #record.email:VARCHAR#,
      status = #record.status:BIT#,
      regist_hhmmss = #record.registHhmmss:TIMESTAMP#,
      up_hhmmss = #record.upHhmmss:TIMESTAMP#,
      invite_unique_id = #record.inviteUniqueId:VARCHAR#,
      merchant_id = #record.merchantId:VARCHAR#,
      extra = #record.extra:LONGVARCHAR#
    <isParameterPresent>
      <include refid="luna_reg_email.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByExample">
    update luna_reg_email
    set token = #record.token:VARCHAR#,
      role_id = #record.roleId:INTEGER#,
      email = #record.email:VARCHAR#,
      status = #record.status:BIT#,
      regist_hhmmss = #record.registHhmmss:TIMESTAMP#,
      up_hhmmss = #record.upHhmmss:TIMESTAMP#,
      invite_unique_id = #record.inviteUniqueId:VARCHAR#,
      merchant_id = #record.merchantId:VARCHAR#
    <isParameterPresent>
      <include refid="luna_reg_email.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByPrimaryKeySelective" parameterClass="ms.luna.biz.dao.model.LunaRegEmail">
    update luna_reg_email
    <dynamic prepend="set">
      <isNotNull prepend="," property="roleId">
        role_id = #roleId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="email">
        email = #email:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="status">
        status = #status:BIT#
      </isNotNull>
      <isNotNull prepend="," property="registHhmmss">
        regist_hhmmss = #registHhmmss:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="upHhmmss">
        up_hhmmss = #upHhmmss:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="inviteUniqueId">
        invite_unique_id = #inviteUniqueId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="merchantId">
        merchant_id = #merchantId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="extra">
        extra = #extra:LONGVARCHAR#
      </isNotNull>
    </dynamic>
    where token = #token:VARCHAR#
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterClass="ms.luna.biz.dao.model.LunaRegEmail">
    update luna_reg_email
    set role_id = #roleId:INTEGER#,
      email = #email:VARCHAR#,
      status = #status:BIT#,
      regist_hhmmss = #registHhmmss:TIMESTAMP#,
      up_hhmmss = #upHhmmss:TIMESTAMP#,
      invite_unique_id = #inviteUniqueId:VARCHAR#,
      merchant_id = #merchantId:VARCHAR#,
      extra = #extra:LONGVARCHAR#
    where token = #token:VARCHAR#
  </update>
  <update id="updateByPrimaryKey" parameterClass="ms.luna.biz.dao.model.LunaRegEmail">
    update luna_reg_email
    set role_id = #roleId:INTEGER#,
      email = #email:VARCHAR#,
      status = #status:BIT#,
      regist_hhmmss = #registHhmmss:TIMESTAMP#,
      up_hhmmss = #upHhmmss:TIMESTAMP#,
      invite_unique_id = #inviteUniqueId:VARCHAR#,
      merchant_id = #merchantId:VARCHAR#
    where token = #token:VARCHAR#
  </update>
</sqlMap>